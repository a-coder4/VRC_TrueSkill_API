import type { ObjectBuilder } from '../../builders.js';
import { Client } from '../client.js';
import { PageableRequestBuilder, type PageableParams } from '../pageable.js';
import type { Skill, SkillType } from './index.js';
export declare class SkillsClient extends Client {
    findAllByEvent(request: (builder: EventSkillsRequestBuilder) => ObjectBuilder<EventSkillsRequest>): import("../client.js").RobotEventsCursor<Skill>;
    findAllByTeam(request: (builder: TeamSkillsRequestBuilder) => ObjectBuilder<TeamSkillsRequest>): import("../client.js").RobotEventsCursor<Skill>;
}
export declare class EventSkillsRequestBuilder extends PageableRequestBuilder<EventSkillsRequest, EventSkillsRequestBuilder> {
    #private;
    eventId(value: number): this;
    teamIds(...value: number[]): this;
    types(...value: SkillType[]): this;
    build(): EventSkillsRequest;
    static EventSkillsRequest: {
        new (builder: EventSkillsRequestBuilder): {
            readonly eventId: number;
            readonly teamIds?: number[] | undefined;
            readonly types?: SkillType[] | undefined;
            params(): EventSkillsParams;
            readonly page?: number | undefined;
            readonly perPage?: number | undefined;
        };
    };
}
export declare class EventSkillsRequest extends EventSkillsRequestBuilder.EventSkillsRequest {
}
interface EventSkillsParams extends PageableParams {
    team?: number[];
    type?: SkillType[];
}
export declare class TeamSkillsRequestBuilder extends PageableRequestBuilder<TeamSkillsRequest, TeamSkillsRequestBuilder> {
    #private;
    teamId(value: number): this;
    eventIds(...value: number[]): this;
    types(...value: SkillType[]): this;
    seasonIds(...value: number[]): this;
    build(): TeamSkillsRequest;
    static TeamSkillsRequest: {
        new (builder: TeamSkillsRequestBuilder): {
            readonly teamId: number;
            readonly eventIds?: number[] | undefined;
            readonly types?: SkillType[] | undefined;
            readonly seasonIds?: number[] | undefined;
            params(): TeamSkillsParams;
            readonly page?: number | undefined;
            readonly perPage?: number | undefined;
        };
    };
}
export declare class TeamSkillsRequest extends TeamSkillsRequestBuilder.TeamSkillsRequest {
}
interface TeamSkillsParams extends PageableParams {
    event?: number[];
    type?: SkillType[];
    season?: number[];
}
export {};
//# sourceMappingURL=skills.d.ts.map