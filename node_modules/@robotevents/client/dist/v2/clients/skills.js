var _EventSkillsRequestBuilder_eventId, _EventSkillsRequestBuilder_teamIds, _EventSkillsRequestBuilder_types, _TeamSkillsRequestBuilder_teamId, _TeamSkillsRequestBuilder_eventIds, _TeamSkillsRequestBuilder_types, _TeamSkillsRequestBuilder_seasonIds;
import { Client } from '../client.js';
import { PageableRequest, PageableRequestBuilder, } from '../pageable.js';
export class SkillsClient extends Client {
    findAllByEvent(request) {
        const req = request(new EventSkillsRequestBuilder()).build();
        return this.getAll(`/events/${req.eventId}/skills`, req.params());
    }
    findAllByTeam(request) {
        const req = request(new TeamSkillsRequestBuilder()).build();
        return this.getAll(`/teams/${req.teamId}/skills`, req.params());
    }
}
class EventSkillsRequestBuilder extends PageableRequestBuilder {
    constructor() {
        super(...arguments);
        _EventSkillsRequestBuilder_eventId.set(this, void 0);
        _EventSkillsRequestBuilder_teamIds.set(this, void 0);
        _EventSkillsRequestBuilder_types.set(this, void 0);
    }
    eventId(value) {
        __classPrivateFieldSet(this, _EventSkillsRequestBuilder_eventId, value, "f");
        return this;
    }
    teamIds(...value) {
        __classPrivateFieldSet(this, _EventSkillsRequestBuilder_teamIds, value, "f");
        return this;
    }
    types(...value) {
        __classPrivateFieldSet(this, _EventSkillsRequestBuilder_types, value, "f");
        return this;
    }
    build() {
        return new EventSkillsRequest(this);
    }
}
_EventSkillsRequestBuilder_eventId = new WeakMap(), _EventSkillsRequestBuilder_teamIds = new WeakMap(), _EventSkillsRequestBuilder_types = new WeakMap();
Object.defineProperty(EventSkillsRequestBuilder, "EventSkillsRequest", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: class extends PageableRequest {
        constructor(builder) {
            super(builder);
            Object.defineProperty(this, "eventId", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            Object.defineProperty(this, "teamIds", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            Object.defineProperty(this, "types", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            if (__classPrivateFieldGet(builder, _EventSkillsRequestBuilder_eventId, "f") === undefined) {
                throw new Error('Missing required property EventSkillsRequest.eventId');
            }
            this.eventId = __classPrivateFieldGet(builder, _EventSkillsRequestBuilder_eventId, "f");
            this.teamIds = __classPrivateFieldGet(builder, _EventSkillsRequestBuilder_teamIds, "f");
            this.types = __classPrivateFieldGet(builder, _EventSkillsRequestBuilder_types, "f");
        }
        params() {
            return { ...super.params(), team: this.teamIds, type: this.types };
        }
    }
});
export { EventSkillsRequestBuilder };
export class EventSkillsRequest extends EventSkillsRequestBuilder.EventSkillsRequest {
}
class TeamSkillsRequestBuilder extends PageableRequestBuilder {
    constructor() {
        super(...arguments);
        _TeamSkillsRequestBuilder_teamId.set(this, void 0);
        _TeamSkillsRequestBuilder_eventIds.set(this, void 0);
        _TeamSkillsRequestBuilder_types.set(this, void 0);
        _TeamSkillsRequestBuilder_seasonIds.set(this, void 0);
    }
    teamId(value) {
        __classPrivateFieldSet(this, _TeamSkillsRequestBuilder_teamId, value, "f");
        return this;
    }
    eventIds(...value) {
        __classPrivateFieldSet(this, _TeamSkillsRequestBuilder_eventIds, value, "f");
        return this;
    }
    types(...value) {
        __classPrivateFieldSet(this, _TeamSkillsRequestBuilder_types, value, "f");
        return this;
    }
    seasonIds(...value) {
        __classPrivateFieldSet(this, _TeamSkillsRequestBuilder_seasonIds, value, "f");
        return this;
    }
    build() {
        return new TeamSkillsRequest(this);
    }
}
_TeamSkillsRequestBuilder_teamId = new WeakMap(), _TeamSkillsRequestBuilder_eventIds = new WeakMap(), _TeamSkillsRequestBuilder_types = new WeakMap(), _TeamSkillsRequestBuilder_seasonIds = new WeakMap();
Object.defineProperty(TeamSkillsRequestBuilder, "TeamSkillsRequest", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: class extends PageableRequest {
        constructor(builder) {
            super(builder);
            Object.defineProperty(this, "teamId", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            Object.defineProperty(this, "eventIds", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            Object.defineProperty(this, "types", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            Object.defineProperty(this, "seasonIds", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            if (__classPrivateFieldGet(builder, _TeamSkillsRequestBuilder_teamId, "f") === undefined) {
                throw new Error('Missing required property TeamSkillsRequest.teamId');
            }
            this.teamId = __classPrivateFieldGet(builder, _TeamSkillsRequestBuilder_teamId, "f");
            this.eventIds = __classPrivateFieldGet(builder, _TeamSkillsRequestBuilder_eventIds, "f");
            this.types = __classPrivateFieldGet(builder, _TeamSkillsRequestBuilder_types, "f");
            this.seasonIds = __classPrivateFieldGet(builder, _TeamSkillsRequestBuilder_seasonIds, "f");
        }
        params() {
            return {
                ...super.params(),
                event: this.eventIds,
                type: this.types,
                season: this.seasonIds,
            };
        }
    }
});
export { TeamSkillsRequestBuilder };
export class TeamSkillsRequest extends TeamSkillsRequestBuilder.TeamSkillsRequest {
}
//# sourceMappingURL=skills.js.map