import axios from 'axios';
import axiosRateLimit from 'axios-rate-limit';
import { AwardsClient, EventsClient, MatchesClient, ProgramsClient, RankingsClient, SeasonsClient, SkillsClient, TeamsClient, } from './clients/index.js';
export * from './clients/index.js';
export class RobotEventsClient {
    constructor(options = {}) {
        Object.defineProperty(this, "awards", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "events", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "matches", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "programs", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "rankings", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "seasons", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "skills", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "teams", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        const token = options.token ?? process.env.ROBOT_EVENTS_TOKEN;
        if (token === undefined) {
            throw new Error('Robot Events API token must be provided via client option "token" or environment variable ROBOT_EVENTS_TOKEN');
        }
        const axiosInstance = axios.create({
            baseURL: options.url ?? 'https://robotevents.com/api/v2',
            headers: {
                Authorization: `Bearer ${token}`,
            },
        });
        axiosRateLimit(axiosInstance, options.rateLimit ?? {
            maxRequests: 100,
            perMilliseconds: 60000,
        });
        this.awards = new AwardsClient(axiosInstance);
        this.events = new EventsClient(axiosInstance);
        this.matches = new MatchesClient(axiosInstance);
        this.programs = new ProgramsClient(axiosInstance);
        this.rankings = new RankingsClient(axiosInstance);
        this.seasons = new SeasonsClient(axiosInstance);
        this.skills = new SkillsClient(axiosInstance);
        this.teams = new TeamsClient(axiosInstance);
    }
}
//# sourceMappingURL=index.js.map