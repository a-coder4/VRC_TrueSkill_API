import type { Grade, Skill } from './index.js';
import { Client } from '../client.js';
import type { ObjectBuilder } from '../../builders.js';
export declare class SkillsClient extends Client {
    findAllBySeason(request: (builder: SeasonSkillsRequestBuilder) => ObjectBuilder<SeasonSkillsRequest>): Promise<Skill[]>;
}
export declare class SeasonSkillsRequestBuilder implements ObjectBuilder<SeasonSkillsRequest> {
    #private;
    seasonId(value: number): this;
    postseason(value: number): this;
    grade(value: Grade): this;
    build(): SeasonSkillsRequest;
    static SeasonSkillsRequest: {
        new (builder: SeasonSkillsRequestBuilder): {
            readonly seasonId: number;
            readonly postseason?: number | undefined;
            readonly grade?: Grade | undefined;
            params(): SeasonSkillsParams;
        };
    };
}
export declare class SeasonSkillsRequest extends SeasonSkillsRequestBuilder.SeasonSkillsRequest {
}
interface SeasonSkillsParams {
    post_season?: number;
    grade_level?: Grade;
}
export {};
//# sourceMappingURL=skills.d.ts.map