var _TeamGroupTeamsRequestBuilder_latitude, _TeamGroupTeamsRequestBuilder_longitude, _TeamGroupTeamsRequestBuilder_programIds, _TeamGroupTeamsRequestBuilder_seasonId;
import { Client } from '../client.js';
export class TeamsClient extends Client {
    async findAllByTeamGroup(request) {
        return this.post('/teams/getTeamsForLatLng', request(new TeamGroupTeamsRequestBuilder()).build().data());
    }
}
class TeamGroupTeamsRequestBuilder {
    constructor() {
        _TeamGroupTeamsRequestBuilder_latitude.set(this, void 0);
        _TeamGroupTeamsRequestBuilder_longitude.set(this, void 0);
        _TeamGroupTeamsRequestBuilder_programIds.set(this, void 0);
        _TeamGroupTeamsRequestBuilder_seasonId.set(this, void 0);
    }
    latitude(value) {
        __classPrivateFieldSet(this, _TeamGroupTeamsRequestBuilder_latitude, value, "f");
        return this;
    }
    longitude(value) {
        __classPrivateFieldSet(this, _TeamGroupTeamsRequestBuilder_longitude, value, "f");
        return this;
    }
    programIds(...value) {
        __classPrivateFieldSet(this, _TeamGroupTeamsRequestBuilder_programIds, value, "f");
        return this;
    }
    seasonId(value) {
        __classPrivateFieldSet(this, _TeamGroupTeamsRequestBuilder_seasonId, value, "f");
        return this;
    }
    build() {
        return new TeamGroupTeamsRequest(this);
    }
}
_TeamGroupTeamsRequestBuilder_latitude = new WeakMap(), _TeamGroupTeamsRequestBuilder_longitude = new WeakMap(), _TeamGroupTeamsRequestBuilder_programIds = new WeakMap(), _TeamGroupTeamsRequestBuilder_seasonId = new WeakMap();
Object.defineProperty(TeamGroupTeamsRequestBuilder, "TeamGroupTeamsRequest", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: class {
        constructor(builder) {
            Object.defineProperty(this, "latitude", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            Object.defineProperty(this, "longitude", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            Object.defineProperty(this, "programIds", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            Object.defineProperty(this, "seasonId", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            if (__classPrivateFieldGet(builder, _TeamGroupTeamsRequestBuilder_latitude, "f") === undefined) {
                throw new Error('Missing required property TeamGroupTeamsRequest.latitude');
            }
            if (__classPrivateFieldGet(builder, _TeamGroupTeamsRequestBuilder_longitude, "f") === undefined) {
                throw new Error('Missing required property TeamGroupTeamsRequest.longitude');
            }
            this.latitude = __classPrivateFieldGet(builder, _TeamGroupTeamsRequestBuilder_latitude, "f");
            this.longitude = __classPrivateFieldGet(builder, _TeamGroupTeamsRequestBuilder_longitude, "f");
            this.programIds = __classPrivateFieldGet(builder, _TeamGroupTeamsRequestBuilder_programIds, "f");
            this.seasonId = __classPrivateFieldGet(builder, _TeamGroupTeamsRequestBuilder_seasonId, "f");
        }
        data() {
            return {
                lat: this.latitude,
                lng: this.longitude,
                programs: this.programIds,
                season_id: this.seasonId,
                when: this.seasonId !== undefined ? When.PAST : undefined,
            };
        }
    }
});
export { TeamGroupTeamsRequestBuilder };
export class TeamGroupTeamsRequest extends TeamGroupTeamsRequestBuilder.TeamGroupTeamsRequest {
}
var When;
(function (When) {
    When["FUTURE"] = "future";
    When["PAST"] = "past";
})(When || (When = {}));
//# sourceMappingURL=teams.js.map