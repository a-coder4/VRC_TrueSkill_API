import type { Team } from './index.js';
import { Client } from '../client.js';
import type { ObjectBuilder } from '../../builders.js';
export declare class TeamsClient extends Client {
    findAllByTeamGroup(request: (builder: TeamGroupTeamsRequestBuilder) => ObjectBuilder<TeamGroupTeamsRequest>): Promise<Team[]>;
}
export declare class TeamGroupTeamsRequestBuilder implements ObjectBuilder<TeamGroupTeamsRequest> {
    #private;
    latitude(value: number): this;
    longitude(value: number): this;
    programIds(...value: number[]): this;
    seasonId(value: number): this;
    build(): TeamGroupTeamsRequest;
    static TeamGroupTeamsRequest: {
        new (builder: TeamGroupTeamsRequestBuilder): {
            readonly latitude: number;
            readonly longitude: number;
            readonly programIds?: number[] | undefined;
            readonly seasonId?: number | undefined;
            data(): TeamGroupTeamsData;
        };
    };
}
export declare class TeamGroupTeamsRequest extends TeamGroupTeamsRequestBuilder.TeamGroupTeamsRequest {
}
interface TeamGroupTeamsData {
    lat: number;
    lng: number;
    programs?: number[];
    season_id?: number;
    when?: When;
}
declare enum When {
    FUTURE = "future",
    PAST = "past"
}
export {};
//# sourceMappingURL=teams.d.ts.map