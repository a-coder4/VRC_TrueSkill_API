import { transformResponse } from "../utils/client.js";
import { seasons } from "../types.js";
import { Event } from "../wrappers/Event.js";
export function seasonsEndpoint(client) {
    return {
        ...seasons,
        /**
         * Get details about a season
         * @param id Season ID
         * @returns Details about the season
         */
        async get(id, options) {
            return client.GET("/seasons/{id}", {
                params: { path: { id } },
                ...options,
            });
        },
        /**
         * Get a list of seasons
         * @param options Query Params
         * @returns List of seasons
         */
        async all(query, options) {
            return client.PaginatedGET("/seasons", { params: { query }, ...options });
        },
        /**
         * Get events for a season
         * @param id Season ID
         * @returns List of events
         **/
        async events(id, query, options) {
            return transformResponse(client.PaginatedGET("/seasons/{id}/events", {
                params: { path: { id }, query },
                ...options,
            }), (data) => data.map((event) => new Event(event, client)));
        },
    };
}
//# sourceMappingURL=seasons.js.map