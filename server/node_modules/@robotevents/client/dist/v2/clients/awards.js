var _EventAwardsRequestBuilder_eventId, _EventAwardsRequestBuilder_teamIds, _EventAwardsRequestBuilder_individuals, _TeamAwardsRequestBuilder_teamId, _TeamAwardsRequestBuilder_eventIds, _TeamAwardsRequestBuilder_seasonIds;
import { Client } from '../client.js';
import { PageableRequest, PageableRequestBuilder, } from '../pageable.js';
export class AwardsClient extends Client {
    findAllByEvent(request) {
        const req = request(new EventAwardsRequestBuilder()).build();
        return this.getAll(`/events/${req.eventId}/awards`, req.params());
    }
    findAllByTeam(request) {
        const req = request(new TeamAwardsRequestBuilder()).build();
        return this.getAll(`/teams/${req.teamId}/awards`, req.params());
    }
}
class EventAwardsRequestBuilder extends PageableRequestBuilder {
    constructor() {
        super(...arguments);
        _EventAwardsRequestBuilder_eventId.set(this, void 0);
        _EventAwardsRequestBuilder_teamIds.set(this, void 0);
        _EventAwardsRequestBuilder_individuals.set(this, void 0);
    }
    eventId(value) {
        __classPrivateFieldSet(this, _EventAwardsRequestBuilder_eventId, value, "f");
        return this;
    }
    teamIds(...value) {
        __classPrivateFieldSet(this, _EventAwardsRequestBuilder_teamIds, value, "f");
        return this;
    }
    individuals(...value) {
        __classPrivateFieldSet(this, _EventAwardsRequestBuilder_individuals, value, "f");
        return this;
    }
    build() {
        return new EventAwardsRequest(this);
    }
}
_EventAwardsRequestBuilder_eventId = new WeakMap(), _EventAwardsRequestBuilder_teamIds = new WeakMap(), _EventAwardsRequestBuilder_individuals = new WeakMap();
Object.defineProperty(EventAwardsRequestBuilder, "EventAwardsRequest", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: class extends PageableRequest {
        constructor(builder) {
            super(builder);
            Object.defineProperty(this, "eventId", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            Object.defineProperty(this, "teamIds", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            Object.defineProperty(this, "individuals", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            if (__classPrivateFieldGet(builder, _EventAwardsRequestBuilder_eventId, "f") === undefined) {
                throw new Error('Missing required property EventAwardsRequest.eventId');
            }
            this.eventId = __classPrivateFieldGet(builder, _EventAwardsRequestBuilder_eventId, "f");
            this.teamIds = __classPrivateFieldGet(builder, _EventAwardsRequestBuilder_teamIds, "f");
            this.individuals = __classPrivateFieldGet(builder, _EventAwardsRequestBuilder_individuals, "f");
        }
        params() {
            return { ...super.params(), team: this.teamIds, winner: this.individuals };
        }
    }
});
export { EventAwardsRequestBuilder };
export class EventAwardsRequest extends EventAwardsRequestBuilder.EventAwardsRequest {
}
class TeamAwardsRequestBuilder extends PageableRequestBuilder {
    constructor() {
        super(...arguments);
        _TeamAwardsRequestBuilder_teamId.set(this, void 0);
        _TeamAwardsRequestBuilder_eventIds.set(this, void 0);
        _TeamAwardsRequestBuilder_seasonIds.set(this, void 0);
    }
    teamId(value) {
        __classPrivateFieldSet(this, _TeamAwardsRequestBuilder_teamId, value, "f");
        return this;
    }
    eventIds(...value) {
        __classPrivateFieldSet(this, _TeamAwardsRequestBuilder_eventIds, value, "f");
        return this;
    }
    seasonIds(...value) {
        __classPrivateFieldSet(this, _TeamAwardsRequestBuilder_seasonIds, value, "f");
        return this;
    }
    build() {
        return new TeamAwardsRequest(this);
    }
}
_TeamAwardsRequestBuilder_teamId = new WeakMap(), _TeamAwardsRequestBuilder_eventIds = new WeakMap(), _TeamAwardsRequestBuilder_seasonIds = new WeakMap();
Object.defineProperty(TeamAwardsRequestBuilder, "TeamAwardsRequest", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: class extends PageableRequest {
        constructor(builder) {
            super(builder);
            Object.defineProperty(this, "teamId", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            Object.defineProperty(this, "eventIds", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            Object.defineProperty(this, "seasonIds", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            if (__classPrivateFieldGet(builder, _TeamAwardsRequestBuilder_teamId, "f") === undefined) {
                throw new Error('Missing required property TeamAwardsRequest.teamId');
            }
            this.teamId = __classPrivateFieldGet(builder, _TeamAwardsRequestBuilder_teamId, "f");
            this.eventIds = __classPrivateFieldGet(builder, _TeamAwardsRequestBuilder_eventIds, "f");
            this.seasonIds = __classPrivateFieldGet(builder, _TeamAwardsRequestBuilder_seasonIds, "f");
        }
        params() {
            return { ...super.params(), event: this.eventIds, season: this.seasonIds };
        }
    }
});
export { TeamAwardsRequestBuilder };
export class TeamAwardsRequest extends TeamAwardsRequestBuilder.TeamAwardsRequest {
}
//# sourceMappingURL=awards.js.map