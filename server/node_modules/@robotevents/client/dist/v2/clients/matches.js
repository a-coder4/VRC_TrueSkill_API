var _EventDivisionMatchesRequestBuilder_eventId, _EventDivisionMatchesRequestBuilder_divisionId, _EventDivisionMatchesRequestBuilder_teamIds, _EventDivisionMatchesRequestBuilder_rounds, _EventDivisionMatchesRequestBuilder_instances, _EventDivisionMatchesRequestBuilder_numbers, _TeamMatchesRequestBuilder_teamId, _TeamMatchesRequestBuilder_eventIds, _TeamMatchesRequestBuilder_seasonIds, _TeamMatchesRequestBuilder_rounds, _TeamMatchesRequestBuilder_instances, _TeamMatchesRequestBuilder_numbers;
import { Client } from '../client.js';
import { PageableRequest, PageableRequestBuilder, } from '../pageable.js';
export class MatchesClient extends Client {
    findAllByEventDivision(request) {
        const req = request(new EventDivisionMatchesRequestBuilder()).build();
        return this.getAll(`/events/${req.eventId}/divisions/${req.divisionId}/matches`, req.params());
    }
    findAllByTeam(request) {
        const req = request(new TeamMatchesRequestBuilder()).build();
        return this.getAll(`/teams/${req.teamId}/matches`, req.params());
    }
}
class EventDivisionMatchesRequestBuilder extends PageableRequestBuilder {
    constructor() {
        super(...arguments);
        _EventDivisionMatchesRequestBuilder_eventId.set(this, void 0);
        _EventDivisionMatchesRequestBuilder_divisionId.set(this, void 0);
        _EventDivisionMatchesRequestBuilder_teamIds.set(this, void 0);
        _EventDivisionMatchesRequestBuilder_rounds.set(this, void 0);
        _EventDivisionMatchesRequestBuilder_instances.set(this, void 0);
        _EventDivisionMatchesRequestBuilder_numbers.set(this, void 0);
    }
    eventId(value) {
        __classPrivateFieldSet(this, _EventDivisionMatchesRequestBuilder_eventId, value, "f");
        return this;
    }
    divisionId(value) {
        __classPrivateFieldSet(this, _EventDivisionMatchesRequestBuilder_divisionId, value, "f");
        return this;
    }
    teamIds(...value) {
        __classPrivateFieldSet(this, _EventDivisionMatchesRequestBuilder_teamIds, value, "f");
        return this;
    }
    rounds(...value) {
        __classPrivateFieldSet(this, _EventDivisionMatchesRequestBuilder_rounds, value, "f");
        return this;
    }
    instances(...value) {
        __classPrivateFieldSet(this, _EventDivisionMatchesRequestBuilder_instances, value, "f");
        return this;
    }
    numbers(...value) {
        __classPrivateFieldSet(this, _EventDivisionMatchesRequestBuilder_numbers, value, "f");
        return this;
    }
    build() {
        return new EventDivisionMatchesRequest(this);
    }
}
_EventDivisionMatchesRequestBuilder_eventId = new WeakMap(), _EventDivisionMatchesRequestBuilder_divisionId = new WeakMap(), _EventDivisionMatchesRequestBuilder_teamIds = new WeakMap(), _EventDivisionMatchesRequestBuilder_rounds = new WeakMap(), _EventDivisionMatchesRequestBuilder_instances = new WeakMap(), _EventDivisionMatchesRequestBuilder_numbers = new WeakMap();
Object.defineProperty(EventDivisionMatchesRequestBuilder, "EventDivisionMatchesRequest", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: class extends PageableRequest {
        constructor(builder) {
            super(builder);
            Object.defineProperty(this, "eventId", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            Object.defineProperty(this, "divisionId", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            Object.defineProperty(this, "teamIds", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            Object.defineProperty(this, "rounds", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            Object.defineProperty(this, "instances", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            Object.defineProperty(this, "numbers", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            if (__classPrivateFieldGet(builder, _EventDivisionMatchesRequestBuilder_eventId, "f") === undefined) {
                throw new Error('Missing required property EventDivisionMatchesRequest.eventId');
            }
            if (__classPrivateFieldGet(builder, _EventDivisionMatchesRequestBuilder_divisionId, "f") === undefined) {
                throw new Error('Missing required property EventDivisionMatchesRequest.divisionId');
            }
            this.eventId = __classPrivateFieldGet(builder, _EventDivisionMatchesRequestBuilder_eventId, "f");
            this.divisionId = __classPrivateFieldGet(builder, _EventDivisionMatchesRequestBuilder_divisionId, "f");
            this.teamIds = __classPrivateFieldGet(builder, _EventDivisionMatchesRequestBuilder_teamIds, "f");
            this.rounds = __classPrivateFieldGet(builder, _EventDivisionMatchesRequestBuilder_rounds, "f");
            this.instances = __classPrivateFieldGet(builder, _EventDivisionMatchesRequestBuilder_instances, "f");
            this.numbers = __classPrivateFieldGet(builder, _EventDivisionMatchesRequestBuilder_numbers, "f");
        }
        params() {
            return {
                ...super.params(),
                team: this.teamIds,
                round: this.rounds,
                instance: this.instances,
                matchnum: this.numbers,
            };
        }
    }
});
export { EventDivisionMatchesRequestBuilder };
export class EventDivisionMatchesRequest extends EventDivisionMatchesRequestBuilder.EventDivisionMatchesRequest {
}
class TeamMatchesRequestBuilder extends PageableRequestBuilder {
    constructor() {
        super(...arguments);
        _TeamMatchesRequestBuilder_teamId.set(this, void 0);
        _TeamMatchesRequestBuilder_eventIds.set(this, void 0);
        _TeamMatchesRequestBuilder_seasonIds.set(this, void 0);
        _TeamMatchesRequestBuilder_rounds.set(this, void 0);
        _TeamMatchesRequestBuilder_instances.set(this, void 0);
        _TeamMatchesRequestBuilder_numbers.set(this, void 0);
    }
    teamId(value) {
        __classPrivateFieldSet(this, _TeamMatchesRequestBuilder_teamId, value, "f");
        return this;
    }
    eventIds(...value) {
        __classPrivateFieldSet(this, _TeamMatchesRequestBuilder_eventIds, value, "f");
        return this;
    }
    seasonIds(...value) {
        __classPrivateFieldSet(this, _TeamMatchesRequestBuilder_seasonIds, value, "f");
        return this;
    }
    rounds(...value) {
        __classPrivateFieldSet(this, _TeamMatchesRequestBuilder_rounds, value, "f");
        return this;
    }
    instances(...value) {
        __classPrivateFieldSet(this, _TeamMatchesRequestBuilder_instances, value, "f");
        return this;
    }
    numbers(...value) {
        __classPrivateFieldSet(this, _TeamMatchesRequestBuilder_numbers, value, "f");
        return this;
    }
    build() {
        return new TeamMatchesRequest(this);
    }
}
_TeamMatchesRequestBuilder_teamId = new WeakMap(), _TeamMatchesRequestBuilder_eventIds = new WeakMap(), _TeamMatchesRequestBuilder_seasonIds = new WeakMap(), _TeamMatchesRequestBuilder_rounds = new WeakMap(), _TeamMatchesRequestBuilder_instances = new WeakMap(), _TeamMatchesRequestBuilder_numbers = new WeakMap();
Object.defineProperty(TeamMatchesRequestBuilder, "TeamMatchesRequest", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: class extends PageableRequest {
        constructor(builder) {
            super(builder);
            Object.defineProperty(this, "teamId", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            Object.defineProperty(this, "eventIds", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            Object.defineProperty(this, "seasonIds", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            Object.defineProperty(this, "rounds", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            Object.defineProperty(this, "instances", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            Object.defineProperty(this, "numbers", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            if (__classPrivateFieldGet(builder, _TeamMatchesRequestBuilder_teamId, "f") === undefined) {
                throw new Error('Missing required property TeamMatchesRequest.teamId');
            }
            this.teamId = __classPrivateFieldGet(builder, _TeamMatchesRequestBuilder_teamId, "f");
            this.eventIds = __classPrivateFieldGet(builder, _TeamMatchesRequestBuilder_eventIds, "f");
            this.seasonIds = __classPrivateFieldGet(builder, _TeamMatchesRequestBuilder_seasonIds, "f");
            this.rounds = __classPrivateFieldGet(builder, _TeamMatchesRequestBuilder_rounds, "f");
            this.instances = __classPrivateFieldGet(builder, _TeamMatchesRequestBuilder_instances, "f");
            this.numbers = __classPrivateFieldGet(builder, _TeamMatchesRequestBuilder_numbers, "f");
        }
        params() {
            return {
                ...super.params(),
                event: this.eventIds,
                season: this.seasonIds,
                round: this.rounds,
                instance: this.instances,
                matchnum: this.numbers,
            };
        }
    }
});
export { TeamMatchesRequestBuilder };
export class TeamMatchesRequest extends TeamMatchesRequestBuilder.TeamMatchesRequest {
}
//# sourceMappingURL=matches.js.map