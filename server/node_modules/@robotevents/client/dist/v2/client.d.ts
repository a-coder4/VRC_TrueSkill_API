import type { AxiosInstance } from 'axios';
import { Cursor } from '../cursor.js';
import type { Paginated } from './clients/index.js';
export declare abstract class Client {
    private readonly axiosInstance;
    constructor(axiosInstance: AxiosInstance);
    protected get<T>(path: string, params?: object): Promise<T>;
    protected getAll<T>(path: string, params?: object): RobotEventsCursor<T>;
}
export declare class RobotEventsCursor<T> extends Cursor<T> {
    private readonly findPage;
    private readonly values;
    private currentPage;
    private isLastPage;
    constructor(findPage: (page: number) => Promise<Paginated<T>>);
    hasNext(): Promise<boolean>;
    next(): Promise<T>;
    private nextPage;
}
//# sourceMappingURL=client.d.ts.map